# GitHub Pages Deployment Workflow
# This workflow automatically builds and deploys the Next.js portfolio site
# to GitHub Pages whenever changes are pushed to the main branch.

name: Deploy to GitHub Pages

# Trigger the workflow on push to main branch
"on":
  push:
    branches:
      - main
  # Allow manual workflow dispatch for testing
  workflow_dispatch:

# Set permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job - compiles the Next.js application
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      # Uses the specified actions/checkout@v3 action to retrieve source code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Fetch full history for better build performance
          fetch-depth: 0

      # Step 2: Set up Node.js environment
      # Configure Node.js with caching for faster builds
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Enable npm caching for faster dependency installation
          cache: 'npm'
          # Specify cache dependency path for the portfolio subdirectory
          cache-dependency-path: portfolio/package-lock.json

      # Step 3: Install dependencies
      # Install npm packages required for building the site
      - name: Install dependencies
        run: |
          cd portfolio
          echo "Installing dependencies..."
          npm ci --prefer-offline --no-audit
        # Add error handling for dependency installation
        continue-on-error: false

      # Step 4: Build the Next.js application
      # Generate static files for deployment
      - name: Build Next.js application
        run: |
          cd portfolio
          echo "Building Next.js application..."
          npm run build
          echo "Build completed successfully"
          ls -la out/
        # Ensure build fails if there are errors
        continue-on-error: false

      # Step 5: Deploy to GitHub Pages
      # Use peaceiris/actions-gh-pages@v3 to deploy to gh-pages branch
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        # Only deploy if we're on the main branch and build succeeded
        if: github.ref == 'refs/heads/main'
        with:
          # Use GitHub token for authentication
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Specify source directory containing built files
          publish_dir: ./portfolio/out
          # Deploy to gh-pages branch as required
          publish_branch: gh-pages
          # Add commit message for deployment
          commit_message: 'Deploy ${{ github.sha }}'
          # Enable force orphan to keep gh-pages branch clean
          force_orphan: true
          # Add .nojekyll file to prevent Jekyll processing
          enable_jekyll: false
          # Add CNAME file if custom domain is configured
          # cname: yourdomain.com

  # Logging and status job - provides detailed logging for debugging
  status:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      # Step 6: Log deployment status
      # Provide detailed logging for debugging purposes
      - name: Log deployment status
        run: |
          echo "=== GitHub Pages Deployment Status ==="
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Event: ${{ github.event_name }}"
          echo "Build Status: ${{ needs.build.result }}"
          echo "Timestamp: $(date)"

          if [ "${{ needs.build.result }}" == "success" ]; then
            echo "‚úÖ Deployment completed successfully!"
            echo "üåê Site should be available at: https://${{ github.repository_owner }}.github.io"
          else
            echo "‚ùå Deployment failed!"
            echo "Please check the build logs above for errors."
            exit 1
          fi